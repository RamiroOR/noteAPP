{"ast":null,"code":"var _jsxFileName = \"D:\\\\mern-stack\\\\frontend\\\\src\\\\components\\\\CreateUser.js\";\nimport React, { Component } from 'react';\nimport axios from 'axios';\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default class CreateUser extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      users: [],\n      username: '',\n      error: ''\n    };\n    this.onChangeUsername = e => {\n      this.setState({\n        username: e.target.value,\n        error: ''\n      });\n    };\n    this.getUsers = async () => {\n      const res = await axios.get('http://localhost:4000/api/users');\n      this.setState({\n        users: res.data\n      });\n    };\n    this.onSubmit = async e => {\n      e.preventDefault();\n      const {\n        username\n      } = this.state;\n\n      // Validaciones básicas\n      if (!username) {\n        this.setState({\n          error: 'Please enter a username.'\n        });\n        return;\n      }\n      if (username.length < 3) {\n        this.setState({\n          error: 'Username must be at least 3 characters long.'\n        });\n        return;\n      }\n\n      // Comprobación de duplicados (opcionalmente podría ser mejor hacerlo en el backend)\n      const userExists = this.state.users.some(user => user.username === username);\n      if (userExists) {\n        this.setState({\n          error: 'Username already exists.'\n        });\n        return;\n      }\n      try {\n        await axios.post('http://localhost:4000/api/users', {\n          username\n        });\n        this.setState({\n          username: ''\n        });\n        this.getUsers();\n        toast.success('User created successfully!'); // Notificación de éxito\n      } catch (error) {\n        toast.error('Failed to create user.'); // Notificación de error\n        console.error('Error creating user:', error);\n      }\n    };\n    this.deleteUser = async id => {\n      await axios.delete('http://localhost:4000/api/users/' + id);\n      this.getUsers();\n    };\n  }\n  async componentDidMount() {\n    const res = await axios.get('http://localhost:4000/api/users');\n    this.setState({\n      users: res.data\n    });\n    this.getUsers();\n    console.log(this.state.users);\n  }\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"row\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-4\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card card-body\",\n          children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n            children: \"Create New User\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n            onSubmit: this.onSubmit,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"form-group\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                className: \"form-control\",\n                value: this.state.username,\n                onChange: this.onChangeUsername\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 33\n              }, this), this.state.error && /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  color: 'red'\n                },\n                children: this.state.error\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 54\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 73,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              className: \"btn btn-primary\",\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-md-8\",\n        children: /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"list-group\",\n          children: this.state.users.map(user => /*#__PURE__*/_jsxDEV(\"li\", {\n            className: \"list-group-item list-group-item-action\",\n            onDoubleClick: () => this.deleteUser(user._id),\n            children: user.username\n          }, user._id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(ToastContainer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this);\n  }\n}","map":{"version":3,"names":["React","Component","axios","ToastContainer","toast","jsxDEV","_jsxDEV","CreateUser","constructor","args","state","users","username","error","onChangeUsername","e","setState","target","value","getUsers","res","get","data","onSubmit","preventDefault","length","userExists","some","user","post","success","console","deleteUser","id","delete","componentDidMount","log","render","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","style","color","map","onDoubleClick","_id"],"sources":["D:/mern-stack/frontend/src/components/CreateUser.js"],"sourcesContent":["import React, { Component } from 'react';\r\nimport axios from 'axios';\r\nimport { ToastContainer, toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nexport default class CreateUser extends Component {\r\n   state = {\r\n        users: [],\r\n        username: '',\r\n        error: ''\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get('http://localhost:4000/api/users');\r\n        this.setState({ users: res.data });\r\n        this.getUsers();\r\n        console.log(this.state.users);\r\n    }\r\n\r\n    onChangeUsername = (e) => {\r\n        this.setState({\r\n            username: e.target.value,\r\n            error: ''\r\n        });\r\n    }\r\n    getUsers = async () => {\r\n        const res = await axios.get('http://localhost:4000/api/users');\r\n        this.setState({users: res.data});\r\n    }\r\n    onSubmit = async e => {\r\n        e.preventDefault();\r\n        const { username } = this.state;\r\n\r\n        // Validaciones básicas\r\n        if (!username) {\r\n            this.setState({ error: 'Please enter a username.' });\r\n            return;\r\n        }\r\n        if (username.length < 3) {\r\n            this.setState({ error: 'Username must be at least 3 characters long.' });\r\n            return;\r\n        }\r\n\r\n        // Comprobación de duplicados (opcionalmente podría ser mejor hacerlo en el backend)\r\n        const userExists = this.state.users.some(user => user.username === username);\r\n        if (userExists) {\r\n            this.setState({ error: 'Username already exists.' });\r\n            return;\r\n        }\r\n        try {\r\n            await axios.post('http://localhost:4000/api/users', { username });\r\n            this.setState({ username: '' });\r\n            this.getUsers();\r\n            toast.success('User created successfully!'); // Notificación de éxito\r\n        } catch (error) {\r\n            toast.error('Failed to create user.'); // Notificación de error\r\n            console.error('Error creating user:', error);\r\n        }\r\n    }\r\n    deleteUser = async (id) => {\r\n        await axios.delete('http://localhost:4000/api/users/' + id);\r\n        this.getUsers();\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"row\">\r\n                <div className=\"col-md-4\">\r\n                    <div className=\"card card-body\">\r\n                        <h3>Create New User</h3>\r\n                        <form onSubmit={this.onSubmit}>\r\n                            <div className=\"form-group\">\r\n                                <input \r\n                                    type=\"text\" \r\n                                    className=\"form-control\" \r\n                                    value={this.state.username}\r\n                                    onChange={this.onChangeUsername}\r\n                                />\r\n                                {this.state.error && <div style={{ color: 'red' }}>{this.state.error}</div>}\r\n                            </div>\r\n                            <button type=\"submit\" className=\"btn btn-primary\">\r\n                                Save\r\n                            </button>\r\n                        </form>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-md-8\">\r\n                    <ul className=\"list-group\">\r\n                        {this.state.users.map(user => (\r\n                            <li className=\"list-group-item list-group-item-action\" key={user._id}\r\n                            onDoubleClick={()=>this.deleteUser(user._id)}\r\n                            >\r\n                                {user.username}\r\n                            </li>\r\n                        ))}\r\n                    </ul>\r\n                </div>\r\n                <ToastContainer />\r\n            </div>\r\n        );\r\n    }  \r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}